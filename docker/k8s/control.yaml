apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: control
spec:
  selector:
    matchLabels:
      app: control # has to match .spec.template.metadata.labels
  serviceName: "control"
  replicas: 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: control # has to match .spec.selector.matchLabels
    spec:
#      terminationGracePeriodSeconds: 10
      containers:
        - name: control
          image: control
          ports:
            - containerPort: 22
              name: ssh
            - containerPort: 8080
              name: http
          volumeMounts:
            # Because of the funky way Kubernetes does volume mounts, we need to mount each file individually.
            # If we just mount the volume once without subPaths, it will replace the existing /root/.ssh/ directory
            # and we won't be able to edit that directory to add e.g. known_hosts file.
            # TODO: If we can precompute the known_hosts then maybe we can push all the SSH config in at compile-time.
            - name: ssh-secrets
              mountPath: /root/.ssh/id_rsa
              subPath: id_rsa
              readOnly: true
            - name: ssh-secrets
              mountPath: /root/.ssh/id_rsa.pub
              subPath: id_rsa.pub
              readOnly: true
            - name: ssh-secrets
              mountPath: /root/.ssh/authorized_keys
              subPath: authorized_keys
              readOnly: true
      volumes:
        - name: ssh-secrets

          secret:
            # Because OpenSSL strictly requires locked down permissions on its .ssh directory,
            # we must ensure that these secrets get mounted with the appropriate permissions.
            defaultMode: 0600
            secretName: id-rsa

#            - name: jepsen-shared
#              mountPath: /var/jepsen/shared
#    volumeClaimTemplates:
#      - metadata:
#          name: jepsen-shared
#        spec:
#          accessModes: [ "ReadWriteMany" ]
#          storageClassName: "host-mount"
#          resources:
#            requests:
#              storage: 1Gi


---

apiVersion: v1
kind: Service
metadata:
  name: control
  labels:
    app: control
spec:
  ports:
    - port: 8080
      name: web
  clusterIP: None
  selector:
    app: control